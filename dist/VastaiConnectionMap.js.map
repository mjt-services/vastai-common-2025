{"version":3,"file":"VastaiConnectionMap.js","sourceRoot":"","sources":["../src/VastaiConnectionMap.ts"],"names":[],"mappings":"","sourcesContent":["import type { VastAiInstance } from \"./3rd-party/VastAiInstance\";\nimport type { VastAiSearchResponse } from \"./3rd-party/VastAiSearchResponse\";\n\nexport type VastaiConnectionMap = {\n  \"vastai.search\": {\n    request: {\n      options?: Partial<{}>;\n      body: {\n        area?: \"offers\";\n        query: string;\n      };\n    };\n    response: VastAiSearchResponse;\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n  \"vastai.label.instance\": {\n    request: {\n      options?: Partial<{}>;\n      body: {\n        contractId?: number;\n        label: string;\n      };\n    };\n    response: VastAiSearchResponse;\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n  \"vastai.show.instances\": {\n    request: {\n      options?: Partial<{}>;\n      body: {};\n    };\n    response: VastAiInstance[];\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n  \"vastai.create.instance\": {\n    request: {\n      options?: Partial<{}>;\n      body: {\n        contractId: number;\n        image: string;\n        diskGb?: number;\n        env?: Record<string, string>;\n        exposedPortMappings?: Record<number, number>;\n        label?: string;\n      };\n    };\n    response: { contractId: number };\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n  \"vastai.connect.instance\": {\n    request: {\n      options?: Partial<{}>;\n      body: {\n        contractId: number;\n        serviceName: string;\n        targetPort: number;\n      };\n    };\n    response: { success: boolean };\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n  \"vastai.destroy.instance\": {\n    request: {\n      options?: Partial<{}>;\n      body: {\n        contractId: number;\n      };\n    };\n    response: { success: boolean };\n    headers: {\n      url?: string;\n      authToken?: string;\n    };\n  };\n};\n"]}